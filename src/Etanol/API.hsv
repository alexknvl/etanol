
-- {-# LANGUAGE RecordWildCards #-}
{--
module Etanol.API 
    ( 
    ) where

import qualified EtanolTools.Unsafe     as U

import Etanol.Analysis
import Etanol.Decompile
import Etanol.Types
import Etanol.Utils

import qualified Data.ByteString.Lazy   as BL
import qualified Data.Text              as T
import qualified Data.Map               as M
import qualified Data.Vector            as V

import Data.List
import Data.Maybe

import ByteCodeParser.BasicTypes
import ByteCodeParser.Reader

type ClassProvider = ClassName -> Maybe BL.ByteString
type RawClassFileProvider = ClassName -> Maybe RawClassFile

data AnalysisInputType 
    = AnalysisInputType 
    { className :: ClassName 
    , classProvider :: ClassProvider
    } 

data AnalysisOutputType
    = AnalysisOutputType
    { fieldPurity :: FieldDB
    , methodPurity :: MethodDB
    , fieldNullability :: FieldNullabilityDB
    , methodNullability :: MethodNullabilityDB
    } deriving (Eq, Show)

rawClassFileProvider :: ClassProvider -> RawClassFileProvider
rawClassFileProvider cfp = fmap readRawByteString . cfp

constPoolProvider :: ClassProvider -> CPoolProvider
constPoolProvider = fmap constantPool . rawClassFileProvider

analysis :: AnalysisInputType -> AnalysisOutputType
analysis AnalysisInputType{..} = undefined
--}